# Generated by Django 4.1.2 on 2023-02-02 03:44

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('database', '0003_alter_importsource_options_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='resultsmodel',
            name='Age_general',
            field=models.CharField(blank=True, choices=[('Infants', 'Infants'), ('Children', 'Children'), ('Children and adolescents', 'Children and adolescents'), ('Children, adolescents and young adults', 'Children, adolescents and young adults'), ('Adolescents and adults', 'Adolescents and adults'), ('Adults', 'Adults'), ('Elderly adults', 'Elderly adults'), ('All ages', 'All ages')], help_text='The general age grouping considered for inclusion by the study.', max_length=50, verbose_name='Age category'),
        ),
        migrations.AlterField(
            model_name='resultsmodel',
            name='Indigenous_population',
            field=models.CharField(blank=True, choices=[('Aboriginal population', 'Aboriginal population'), ('General - special population', 'General - special population'), ('General population', 'General population'), ('Non-Indigenous population', 'Non-Indigenous population'), ('Not Defined', 'Not Defined'), ('Torres Strait Islander', 'Torres Strait Islander')], help_text='This variable captures stratification of the Indigenous population (where reported) into “Aboriginal”, “Torres Strait Islander” or “both Aboriginal and Torres Strait Islanders”.', max_length=50),
        ),
        migrations.AlterField(
            model_name='resultsmodel',
            name='Population_gender',
            field=models.CharField(blank=True, choices=[('Females', 'Females'), ('Males', 'Males'), ('Males and females', 'Males and females')], help_text='This variable captures stratification by sex (where reported), with categories of “males”, “females”, “males and females”.', max_length=30, verbose_name='Population - Gender'),
        ),
        migrations.AlterField(
            model_name='studiesmodel',
            name='Aria_remote',
            field=models.CharField(blank=True, choices=[('Combination', 'Combination'), ('Metropolitan', 'Metropolitan'), ('Regional', 'Regional'), ('Remote', 'Remote')], help_text='Classification into metropolitan, regional and remote areas based on the ARIA+ (Accessibility and Remoteness Index of Australia) system.', max_length=20, verbose_name='ARIA+ Remoteness Classification'),
        ),
        migrations.AlterField(
            model_name='studiesmodel',
            name='Climate',
            field=models.CharField(blank=True, choices=[('Arid', 'Arid'), ('Combination', 'Combination'), ('Temperate', 'Temperate'), ('Tropical', 'Tropical')], help_text='Climatic conditions based on the geographic coverage of studiesmodel, for example: “Tropical” for studiesmodel conducted at the Top-End NT, “Temperate” for studiesmodel from Victoria or NSW.', max_length=20),
        ),
        migrations.AlterField(
            model_name='studiesmodel',
            name='Coverage',
            field=models.CharField(blank=True, choices=[('National/multi-jurisdictional', 'National/multi-jurisdictional'), ('Single Institution/service', 'Single Institution/service'), ('State', 'State'), ('Subnational/region', 'Subnational/region')], help_text='Level of geographic coverage in the study, categorised as (i) national/multli-jurisdictional, (ii) state, (iii) subnational/ regional, (iv) single institution/ service.', max_length=200, verbose_name='Geographic Coverage Level'),
        ),
        migrations.AlterField(
            model_name='studiesmodel',
            name='Data_source',
            field=models.CharField(blank=True, choices=[('ED presentations only', 'ED presentations only'), ('Hospital admissions', 'Hospital admissions'), ('Hospital admissions & active surveillance', 'Hospital admissions & active surveillance'), ('ICU admissions', 'ICU admissions'), ('Laboratory records only', 'Laboratory records only'), ('Medical records only', 'Medical records only'), ('Multiple sources', 'Multiple sources'), ('Outbreak investigations', 'Outbreak investigations'), ('PHC health service data', 'PHC health service data'), ('Register or notification', 'Register or notification'), ('Screening programme', 'Screening programme'), ('Survey/Questionnaire', 'Survey/Questionnaire'), ('Other', 'Other')], help_text='Method of case finding/identification, for example: screening or active surveillance for reporting cases of impetigo or skin sores; population registers for ARF; medical record review.', max_length=50, verbose_name='Data source'),
        ),
        migrations.AlterField(
            model_name='studiesmodel',
            name='Diagnosis_method',
            field=models.CharField(blank=True, choices=[('Clinical and laboratory diagnosis', 'Clinical and laboratory diagnosis'), ('Clinical diagnosis only', 'Clinical diagnosis only'), ('ICD codes', 'ICD codes'), ('Laboratory diagnosis', 'Laboratory diagnosis'), ('Notifications', 'Notifications'), ('Primary Health Care codes (SNOMED/ICPC)', 'Primary Health Care codes (SNOMED/ICPC)'), ('Self report (questionnaire/survey)', 'Self report (questionnaire/survey)'), ('Other', 'Other')], help_text='Indicates the process used to identify/diagnose Strep A-associated diseases, such as: notifications, ICD codes, Snowmed/ICPC codes, clinical diagnosis, laboratory diagnosis, echocardiography or combined methods.', max_length=200),
        ),
        migrations.AlterField(
            model_name='studiesmodel',
            name='Disease',
            field=models.CharField(blank=True, choices=[('AGN', 'AGN'), ('ARF', 'ARF'), ('iStrep A - NF', 'iStrep A - NF'), ('iStrep A - Scarlet fever', 'iStrep A - Scarlet fever'), ('iStrep A - bacteraemia', 'iStrep A - bacteraemia'), ('iStrep A - cellulitis', 'iStrep A - cellulitis'), ('iStrep A - pneumonia', 'iStrep A - pneumonia'), ('iStrep A - sepsis', 'iStrep A - sepsis'), ('iStrep A - severe TSS', 'iStrep A - severe TSS'), ('iStrep A - all', 'iStrep A - all'), ('Superficial skin & throat infection', 'Superficial skin & throat infection'), ('Superficial throat infection', 'Superficial throat infection'), ('Superficial skin infection', 'Superficial skin infection'), ('Other', 'Other')], help_text='Subcategory of disease within the broader study group. Example: iStrepA - bactaraemia', max_length=100, verbose_name='Specific Disease'),
        ),
        migrations.AlterField(
            model_name='studiesmodel',
            name='Study_design',
            field=models.CharField(choices=[('Case series', 'Case series'), ('Cross-sectional', 'Cross-sectional'), ('Prospective', 'Prospective'), ('Prospective and Retrospective', 'Prospective and Retrospective'), ('Prospective cohort', 'Prospective cohort'), ('Report', 'Report'), ('Retrospective', 'Retrospective'), ('Retrospective review', 'Retrospective review'), ('Retrospective cohort', 'Retrospective cohort'), ('Review article', 'Review article'), ('Other', 'Other')], help_text='Study classification based on the temporality of data collection. Prospective (if study involves screening or active surveillance or primary data collection) or retrospective (study involves using either administrative/medical record data from hospitals, primary health centres, laboratory or population datasets) or both prospective and retrospective (if study has both components). Other categories which are rarely used include report and outbreak investigation.', max_length=50),
        ),
        migrations.AlterField(
            model_name='studiesmodel',
            name='Study_group',
            field=models.CharField(blank=True, choices=[('Superficial skin and throat', 'Superficial skin and throat'), ('Invasive Strep A', 'Invasive Strep A'), ('ARF', 'ARF'), ('APSGN', 'APSGN')], help_text='Broad classification of the Strep A-associated disease type that the study was based on: (i) Superficial skin and/or throat infections, (ii) Invasive Strep A infections, (iii) Acute Rheumatic Fever (ARF), (iv) Acute Post Streptococcal Glomerulonephritis (APSGN).', max_length=50, verbose_name='Study Group'),
        ),
        migrations.AlterField(
            model_name='studiesmodel',
            name='Unique_identifier',
            field=models.CharField(blank=True, help_text='Identifier linking individual Results to each Study in the Studies/Methods data', max_length=20, null=True, verbose_name='Unique Identifier (Internal Use Only)'),
        ),
    ]
